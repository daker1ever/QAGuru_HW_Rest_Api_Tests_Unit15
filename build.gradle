import java.lang.reflect.Type

plugins {
    id "java"
    id "io.qameta.allure" version "2.10.0"
    id "io.freefair.lombok" version "6.0.0-m2"
}
def restAssuredVersion = "5.5.0",
    allureVersion = "2.29.0"
allure {
    report {
        version.set(allureVersion) //версия Allure Report (https://github.com/allure-framework/allure2)
    }
    adapter {
        aspectjWeaver.set(true) // обработка аннотации @Step
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion) //версия Allure JUnit5 (https://github.com/allure-framework/allure-java)
            }
        }
    }
}

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.slf4j:slf4j-simple:2.0.13'
    testImplementation(
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            'org.junit.jupiter:junit-jupiter:5.11.0-M1',
            'io.qameta.allure:allure-selenide:2.28.1'
    )
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
test {
    useJUnitPlatform()
}
tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}
task with_lombok (type: Test) {
    useJUnitPlatform {
        includeTags("WithLombok")
    }
}
task register_user (type: Test) {
    useJUnitPlatform {
        includeTags("WithLombok")
    }
}
task create_user (type: Test) {
    useJUnitPlatform {
        includeTags("WithLombok")
    }
}
